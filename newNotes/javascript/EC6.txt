谷歌下要加严格模式  "use strict"
火狐下type="application/javascrpt;version=1.7"  类似的

=========定义变量==

var 和 let

let特性：
    1、不允许重复声明
    2、没有预解析。 (如果先使用一个变量a，后面再声明a ，前面a的值为undefined，let直接报错)
    3、块级作用域   (let 声明的变量在代码块(if for 只要是{}就算)中起作用，var的只有函数)


=========常量 const ==;

const a=5;  (这个值不能修改)

const a={}  (对象里面的键值是可以改变的)

========结构赋值 (结构数组或对象)  初期不支持谷歌

    解构赋值：
 
         ES6允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。

         相当于可以直接访问对象或数组里面的元素了，不一定要通过对象才能访问
			
	 数组的解构赋值：按照对应的顺序解构。

             var arr=[1,2,3];

             var [a,b,c]=arr;

             console.log(a+":"+b+":"+c); 

         对象的结构赋值是按名字(键)一一对应的

              var obj = {
	          foo:function(){

		  },
		  str:'abc'
              }
	      var {foo,str} = obj;
	      console.log(foo,str);

========字符串新方法

  -- str.repeat(10); 相当吧str复制10份

  -- 模板字符串(在一个字符串间加一个变量的话就不用把字符串断开了)

	var name ='leo';
	var age = 39;

	var str = '你的名字是：'+name+'你的年龄是：'+age;
        console.log(str);

	var str = `你的名字是：${name}你的年龄是：${age}`;
	console.log(str);

	/*
		模板字符串（template string）是增强版的字符串，用反引号（`）标识。

                    可以当作普通字符串使用

                    可以用来定义多行字符串

                    在字符串中嵌入变量

		代码中的字符串用反引号(`)表示，如果需要引入变量则使用${变量名}，在{}中可以进行运算，也可以引用对象属性。
	*/

=====================================数组

 Array.from():

     类数组转为数组: var data=[].slice.call(objs); （ec6前) 

                     var data=Array.from(objs); (ec6)  (ec6中字符串也是一个类数组

 Array.of(); 

     将一组参数转换为数组 如Array.of(8,5,6,3);

                            var arr=new Array(8);（这样如果只有一个数值参数会成为长度为8） 
 arr.find(function(){});

      find的作用变老了整个数组，没遍历一次都会调用一次函数，函数有有几个参数 （value index 该数组）

      如果条件成立返回当前遍历的元素，都不符合返回undefined

 arr.findIndex(function(){});

      findIndex的作用变老了整个数组，没遍历一次都会调用一次函数，函数有有几个参数 （value index 该数组）

      如果条件成立返回当前遍历的元素的位置，都不符合返回-1

 arr.fill();

      填充数组 参数 （填充的内容，开始位置，结束位置(包前不包后)）//如果没有开始结束位置就把所有素组元素都替换掉了


=====for of

     for(var value of arr==arr.values()/str){};遍历有变量接口的对象，数组和字符串默认是有遍历接口的，对象类型默认是没有变量接口的（但是可以部署让他有）

     for(var key of arr.keys()){};遍历数组的所有

     for(var key,value of arr.entries()){};变量key和value

=====数组推导 （通过现有数组生成新的数组 并且能对值进行有规律的改变）

     var arr=[1,2,3,4,5];

     var arr2=[for(value of arr) 这里可以直接加判断(可有可无) value*2 ] ;value不能声明 arr2的值是[2,4,6,8,10]

===================对象

=====var obj={可以直接写方法 不用以键值的方式写}

=====var obj={键可以直接用表达式或变量代替 ["a"+"b"]:10,}

=========对象扩展方法
  
     Object.is(1,0) //判断两个参数是否全等 (在这NAN=NAN)
      

      
	
