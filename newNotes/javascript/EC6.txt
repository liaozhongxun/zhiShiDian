谷歌下要加严格模式  "use strict"
火狐下type="application/javascrpt;version=1.7"  类似的

=========定义变量==

var 和 let

let特性：
    1、不允许重复声明
    2、没有预解析。 (如果先使用一个变量a，后面再声明a ，前面a的值为undefined，let直接报错)
    3、块级作用域   (let 声明的变量在代码块(if for 只要是{}就算)中起作用，var的只有函数)


=========常量 const ==;

const a=5;  (这个值不能修改)

const a={}  (对象里面的键值是可以改变的)

========结构赋值 (结构数组或对象)  初期不支持谷歌

    解构赋值：
 
         ES6允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）。

         相当于可以直接访问对象或数组里面的元素了，不一定要通过对象才能访问
			
	 数组的解构赋值：按照对应的顺序解构。

             var arr=[1,2,3];

             var [a,b,c]=arr;

             console.log(a+":"+b+":"+c); 

         对象的结构赋值是按名字(键)一一对应的

              var obj = {
	          foo:function(){

		  },
		  str:'abc'
              }
	      var {foo,str} = obj;
	      console.log(foo,str);

========字符串新方法

  -- str.repeat(10); 相当吧str复制10份

  -- 模板字符串(在一个字符串间加一个变量的话就不用把字符串断开了)

	var name ='leo';
	var age = 39;

	var str = '你的名字是：'+name+'你的年龄是：'+age;
        console.log(str);

	var str = `你的名字是：${name}你的年龄是：${age}`;
	console.log(str);

	/*
		模板字符串（template string）是增强版的字符串，用反引号（`）标识。

                    可以当作普通字符串使用

                    可以用来定义多行字符串

                    在字符串中嵌入变量

		代码中的字符串用反引号(`)表示，如果需要引入变量则使用${变量名}，在{}中可以进行运算，也可以引用对象属性。
	*/
	
